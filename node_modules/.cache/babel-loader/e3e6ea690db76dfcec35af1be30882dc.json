{"ast":null,"code":"var _jsxFileName = \"/home/pankaj/react-assignment/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      decimal: '',\n      error: '',\n      roman: ''\n    };\n    this.convertRoman = this.convertRoman.bind(this);\n  }\n\n  convertRoman(e) {\n    var romanMatrix = [[1000, 'M'], [900, 'CM'], [500, 'D'], [400, 'CD'], [100, 'C'], [90, 'XC'], [50, 'L'], [40, 'XL'], [10, 'X'], [9, 'IX'], [5, 'V'], [4, 'IV'], [1, 'I']];\n    console.log(e.target.value);\n\n    if (isNaN(e.target.value)) {\n      this.setState({\n        error: 'Please enter a valid number.'\n      });\n    } else {\n      this.setState({\n        error: ''\n      });\n      x;\n      console.log('Number');\n    }\n\n    this.setState({\n      decimal: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Decimal Number\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.decimal,\n      onChange: this.convertRoman,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.decimal), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", this.state.error)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pankaj/react-assignment/src/App.js"],"names":["React","App","Component","constructor","props","state","decimal","error","roman","convertRoman","bind","e","romanMatrix","console","log","target","value","isNaN","setState","x","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG,EADD;AAETC,MAAAA,KAAK,EAAG,EAFC;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AAEZ,QAAIC,WAAW,GAAG,CACd,CAAC,IAAD,EAAO,GAAP,CADc,EAEd,CAAC,GAAD,EAAM,IAAN,CAFc,EAGd,CAAC,GAAD,EAAM,GAAN,CAHc,EAId,CAAC,GAAD,EAAM,IAAN,CAJc,EAKd,CAAC,GAAD,EAAM,GAAN,CALc,EAMd,CAAC,EAAD,EAAK,IAAL,CANc,EAOd,CAAC,EAAD,EAAK,GAAL,CAPc,EAQd,CAAC,EAAD,EAAK,IAAL,CARc,EASd,CAAC,EAAD,EAAK,GAAL,CATc,EAUd,CAAC,CAAD,EAAI,IAAJ,CAVc,EAWd,CAAC,CAAD,EAAI,GAAJ,CAXc,EAYd,CAAC,CAAD,EAAI,IAAJ,CAZc,EAad,CAAC,CAAD,EAAI,GAAJ,CAbc,CAAlB;AAgBAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,KAArB;;AAEA,QAAGC,KAAK,CAACN,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR,EAA0B;AACtB,WAAKE,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAG;AAAV,OAAd;AACH,KAFD,MAEO;AACH,WAAKW,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAG;AAAV,OAAd;AAA8BY,MAAAA,CAAC;AAC/BN,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AAGD,SAAKI,QAAL,CAAc;AAAEZ,MAAAA,OAAO,EAAGK,CAAC,CAACI,MAAF,CAASC;AAArB,KAAd;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,OAArC;AAA8C,MAAA,QAAQ,EAAE,KAAKG,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKJ,KAAL,CAAWC,OAAjB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKD,KAAL,CAAWE,KAAlB,CALJ,CADJ,CADJ;AAWH;;AAzD6B;;AA4DlC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            decimal : '',\n            error : '',\n            roman : ''\n        };\n\n        this.convertRoman = this.convertRoman.bind(this);\n    };\n\n    convertRoman(e) {\n\n        var romanMatrix = [\n            [1000, 'M'],\n            [900, 'CM'],\n            [500, 'D'],\n            [400, 'CD'],\n            [100, 'C'],\n            [90, 'XC'],\n            [50, 'L'],\n            [40, 'XL'],\n            [10, 'X'],\n            [9, 'IX'],\n            [5, 'V'],\n            [4, 'IV'],\n            [1, 'I']\n        ];\n\n        console.log(e.target.value);\n\n        if(isNaN(e.target.value)) {\n            this.setState({ error : 'Please enter a valid number.' });\n        } else {\n            this.setState({ error : '' });x\n            console.log('Number');\n        }\n\n\n        this.setState({ decimal : e.target.value });\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label>Decimal Number</label>\n                    <input type=\"text\" value={this.state.decimal} onChange={this.convertRoman}/>\n\n                    <h1>{ this.state.decimal}</h1>\n                    <h4> { this.state.error}</h4>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}